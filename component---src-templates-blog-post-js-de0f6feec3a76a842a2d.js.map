{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"wNAkEeA,UA3DU,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,eAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,EAAnC,UACE,cAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,0BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,4BAHX,UAKE,mCACE,oBAAIC,SAAS,WAAb,SAAyBd,EAAKQ,YAAYH,QAC1C,4BAAIL,EAAKQ,YAAYO,UAEvB,yBACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,uBACA,iCACE,cAAC,IAAD,SAGJ,qBAAKH,UAAU,gBAAf,SACE,qBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,GANb,UASE,6BACGlB,GACC,eAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,OAApC,eACKtB,EAASE,YAAYH,WAI9B,6BACGE,GACC,eAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,OAAhC,UACGrB,EAAKC,YAAYH,MADpB,mBAaP,IAAMwB,EAAS","file":"component---src-templates-blog-post-js-de0f6feec3a76a842a2d.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}