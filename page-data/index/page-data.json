{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Blog-Around"}},"allMarkdownRemark":{"nodes":[{"excerpt":"Incremental DOM vs Virtual DOM 한줄 요약:\nVirtual DOM은 js object 기반으로 모델링된 DOM 전체를 상태변화가 있을때 마다 생성해서 비교하기 때문에 빠르지만 메모리를 많이 사용하고 Incremental DOM…","fields":{"slug":"/web/IncreMental_dom_vs_virtual_dom/"},"frontmatter":{"date":"September 08, 2021","title":"Incremental DOM vs virtual DOM","description":"Incremental DOM vs virtual DOM에 대한 글을 읽으며 생각한 점을 정리해보자."}},{"excerpt":"React cheat sheet Fragments key가 있는 fragment를 사용하고 싶을때는 축약형을 사용할 수 없다. \n대신 명시적으로 fragment를 선언해줘야 한다.  JSX jsx 는 babel-loader…","fields":{"slug":"/web/ReactAPI/"},"frontmatter":{"date":"August 24, 2021","title":"React cheat sheet","description":"React document 공식문서를 읽으며 기억하고 싶은 내용들을 정리."}},{"excerpt":"dooboo-ui 최근 오픈소스 컨트리뷰톤 이라는 프로그램에 참여해서 멘토링을 받으며 dooboo-ui에 기여할 기회가 생겼다.  dooboo-ui는 React-Native 기반의 ui 컴포넌트 라이브러리 프로젝트로서 React-Native UI…","fields":{"slug":"/web/SomeDraft/"},"frontmatter":{"date":"August 11, 2021","title":"ui 라이브러리의 컴포넌트를 구현하다 생긴 고민.","description":"컴포넌트 받기 vs callback 받기"}},{"excerpt":"MVC MVC(Model-View-Controller) 모델은 아키텍쳐 패턴으로써 소프트웨어 서비스에서 관심사를 분리해 코드의 재사용성을 높히고 유지보수를 쉽게 하기위해 사용한다. 사실 MVC…","fields":{"slug":"/web/MVC/"},"frontmatter":{"date":"July 29, 2021","title":"MVC","description":"MVC 아키텍쳐 정리 해보자."}},{"excerpt":"OAuth 2.0 OAuth 2.0 이란? OAuth 2.0는  Auth…","fields":{"slug":"/web/OAuth_20/"},"frontmatter":{"date":"June 08, 2021","title":"OAuth 2.0","description":"OAuth 2.0을 알아보자."}},{"excerpt":"HtmlVideoElement…","fields":{"slug":"/web/html_video_in_browsers/"},"frontmatter":{"date":"Invalid date","title":"브라우저별 HtmlVideoElement 지원 사항 및 제약 사항.","description":"비디오 관련 프로젝트를 하면서 정리한 브라우저별 HTMLVideoElement 지원사항, 정책 정리."}},{"excerpt":"…","fields":{"slug":"/project/bingo_with_redux/"},"frontmatter":{"date":"January 08, 2021","title":"Bingo with react and redux.","description":"최근 왓챠의 과제전형을 통해 리액트와 리덕스를 이용해 빙고를 만들어볼 기회가 생겼다. 리덕스를 학습한지 1년만에 다시 빠르게 복습해서 만들었는데, 꽤나 재미있게 만들었던 프로젝트 같다. 프로젝트를 진행하며 한 고민들과 만든 뒤에 생각난 개선사항들을 한번 적어보았다."}},{"excerpt":"git reset, revert 커밋을 되돌리는 방법 두가지 reset, revert…","fields":{"slug":"/git/git-reset_rebase_revert/"},"frontmatter":{"date":"November 15, 2020","title":"git reset, revert.","description":"회사에 처음 들어와 git이 익숙하지 않았을 적,, 커밋 실수를해 떨리는 마음으로 reset과 revert를 찾아보던 것이 생각나 이제는 익숙해진 이 둘에 대해 블로그를 작성해보려고 한다."}},{"excerpt":"You don’t know JS 타입과 문법, 스코프와 클로저.  20201108 기준 작성 중인 블로그. # 아직 작성 중인 블로그 입니다!!! 들어가며  사실 이 책을 읽기 시작한지는 꽤 오래 되었다. 이 책은 2020년도…","fields":{"slug":"/books/YDKJS_1/"},"frontmatter":{"date":"November 08, 2020","title":"You don't know JS 타입과 문법, 스코프와 클로저.","description":"YOU DON'T KNOW JS 타입과 문법, 스코프와 클로저는 2020 년도 8월 부터 읽기 시작했다. 이런 저런 일들이 있어서 중간 중간에 읽기를 중단하고 읽지 않고 있다가 최근에 다시 생각이 나서 완독을 하게 되었다! :) 그래서 내용을 까먹지 않고자 리뷰를 해보려고 한다."}},{"excerpt":"l,[’# OKR 실천편   지금 다니는 회사에서는 성과 중심 조직을 위한 실행 방법론인 OKR(Objective. Key Result)를 사용하고있다. 입사를 하면서 OKR과 관련된 책을 선물로 받아 이를 읽어보게 되었다. 이 OKR…","fields":{"slug":"/books/OKR실천편/"},"frontmatter":{"date":"October 09, 2020","title":"OKR 실천편 책 리뷰.","description":"지금 다니는 회사에서는 성과 중심 조직을 위한 실행 방법론인 OKR(Objective. Key Result)를 사용하고있다. 그래서 이와 관련된 OKR 실천편이라는 책을 입사할 때 선물로 받았는데, 이 책을 읽고 리뷰를 해보려고 한다. "}},{"excerpt":"Map  회사에서 작업을 하다가 key:value의 형태의 자료구조가 필요했다. 물론 object도 key:value 형태의 자료구조지만 key를 string과 Symbol 만으로 설정할 수 있다는 한계가 있어서 새로운 자료구조를 찾다가 Map…","fields":{"slug":"/JavaScriptAtoZ/es6_Map_Set/"},"frontmatter":{"date":"October 08, 2020","title":"JS - es6문법 new Map()","description":"key: value의 형태의 자료구조인 Map을 알아보자!"}},{"excerpt":"keypress vs keyup vs keydown   평소 리액트로 개발을 하다가 회사에서 직접 DOM을 조작하고 WEB API를 이용해 개발할 일이 생겼다. 초반에 keypress, keyup, keydown…","fields":{"slug":"/JavaScriptAtoZ/keyup_vs_keydown/"},"frontmatter":{"date":"October 05, 2020","title":"JS - keypress vs keyup vs keydown","description":"키 입력시에 발생하는 이벤트인 js WEB API의 keypress vs keyup vs keydown를 비교해보고 각각에 대해서 알아보자!"}},{"excerpt":"Git-flow   필자는 현재 근무하는 회사에서 Jira와 함께 Git-flow를 사용해서 Git-flow를 알게 되었다. 처음엔 생소했지만 간단하게 정리된 설명을 읽어보니 쉽게 이해가 가능했고, 바로 프로젝트에서 사용하고 있는 flow…","fields":{"slug":"/git/git-flow/git-flow/"},"frontmatter":{"date":"October 04, 2020","title":"git의 효율적인 관리 전략 Git-flow.","description":"현재 근무하는 회사에서 Jira와 함께 Git-flow를 사용해서 Git-flow를 알게 되었는데, 개념을 정리해보며 함께 이해도를 높혀보자!"}},{"excerpt":"call by value VS call by Reference 다른 언어에서 값은 구문에 따라 call by value 나 call by ref로 전달, 할당 된다. c++에서는 &와 같은 참조 연산자 등을 이용해 레퍼런스를 넘긴다. Alias…","fields":{"slug":"/YDKJS_study/day3_valueAndReference/"},"frontmatter":{"date":"July 06, 2020","title":"JS - call by value VS call by Reference","description":"얕은 복사, 깊은 복사를 공부하다가 js의 인수 전달은 어떻게 이루어지는지 궁금해져 정리해본 call by value VS call by Reference"}},{"excerpt":"값 자바스크립트에 내장된 값 타입과 작동방식에 대한 이해. 배열 자바스크립트의 배열은 다른 strict type language…","fields":{"slug":"/YDKJS_study/day2_Value/"},"frontmatter":{"date":"July 06, 2020","title":"JS - Value","description":"JS의 자바스크립트에 내장된 값 타입과 작동방식에 대한 이해."}},{"excerpt":"Prototype 이 정리는 프로토타입 이해하기,MDN Object prototypes 를 참고해 작성한 글입니다.  자바스크립트를 처음 배우기 시작할 때 JS는 객체 지향형 언어의 패러다임의 특성을 가지고 있다는 말을 들었을 것이다. ES…","fields":{"slug":"/JavaScriptAtoZ/day4_Prototype/"},"frontmatter":{"date":"July 06, 2020","title":"JS - 프로토타입","description":"JS의 프로토타입 상속"}},{"excerpt":"타입 자바스크립트는 동적 언어이기 때문에 변수를 선언 할 때, 타입을 명시해주지 않는다. 이러한 부분때문에 자바스크립트에서 타입이 있다는 사실을 간과하기 쉬운데 ECMA…","fields":{"slug":"/YDKJS_study/day1_Type/"},"frontmatter":{"date":"July 04, 2020","title":"JS - 타입","description":"JS의 내장 타입에 대한 이해 "}},{"excerpt":"Java의 기본문법1: 자료형과 표준 입출력 자바 프로그램의 가장 기본적인 구조는 다음과 같다.  import 문장 java.lang을 재외한 모든 패키지를 가져올때는 import…","fields":{"slug":"/Java_reboot/2_Java의 기본문법_자료형과 표준입출력/"},"frontmatter":{"date":"April 20, 2020","title":"Java - 자바의 자료형과 표준 입출력","description":"Java의 가장 기초적인 문법 "}},{"excerpt":"자바의 개념 및 특징 JAVA는 c++를 모델로 하여 선마이크로 시스템즈에서 개발된 언어로써 객체지향형 언어이며, 인터프리터 언어로써 JVM 위에서 실행되는 언어이다.  자바 프로그램의 종류 J2SE:개인용 컴퓨터용 자바 Java SE…","fields":{"slug":"/Java_reboot/1_Java의 특징 및 특성/"},"frontmatter":{"date":"April 20, 2020","title":"Java - 자바의 특징 및 특성","description":"Java의 기본적인 특성과 특징, 장점 등을 정리해보았다. "}},{"excerpt":"Java 기본문법: 조건문, 반복문, 배열객체 조건문 if문 c와 동일 switch case 문 for 문 while 문 break, continue break: 하나의 loop을 빠져나감\ncontinue…","fields":{"slug":"/Java_reboot/3_Java의 기본문법_제어문, 반복문, 배열객체/"},"frontmatter":{"date":"April 20, 2020","title":"Java - 자바의 조건문, 반복문, 배열 객체","description":"Java의 가장 기초적인 문법 part 2 조건문, 반복문, 배열 객체 "}},{"excerpt":"Java의 class…","fields":{"slug":"/Java_reboot/4_Java의 class, 객체 지향형언어의 특성/"},"frontmatter":{"date":"April 20, 2020","title":"Java - 자바의 class, 객체 지향형 언어의 특성.","description":"Java의 객체 지향적 특성 "}},{"excerpt":"Java…","fields":{"slug":"/Java_reboot/5_Java의 상속, 인터페이스, 접근제어자/"},"frontmatter":{"date":"April 20, 2020","title":"Java - Java의 상속, 인터페이스, 접근제어자","description":"Java의 상속, 인터페이스, 접근제어자 등을 알아보며 객체 지향과 관련된 문법을 알아보자! "}},{"excerpt":"ES6의 배열 비구조화 할당 만약 함수가 array를 return 할 때 비구조화 할당을 이용하면 깔끔한 처리가 가능하다.  객체 비구조화 할당 obj Destructuring…","fields":{"slug":"/JavaScriptAtoZ/day3_ES6_arrays/"},"frontmatter":{"date":"April 08, 2020","title":"JS - 비구조화 할당","description":"ES6 배열, 객체 문법"}},{"excerpt":"배열 메서드와 유사배열 객체 1. 배열의 메서드 배열은 Array 타입의 객체이다. Array.prototype의 객체를 상속받는 다는 것이다. 이 내부에는 많은 메서드가 있는데, 배열의 처리에 유용한 메서드가 많아 몇가지를 정리해보려고 한다.…","fields":{"slug":"/JavaScriptAtoZ/day2_arrays/"},"frontmatter":{"date":"March 27, 2020","title":"JS - 자바스크립트 배열 메서드","description":"각종배열 베서드와 유사배열 객체"}},{"excerpt":"웹 브라우저 실행시 일어나는 일 브라우저에서 자바스크립트가 하는 일은 다음과 같다. 웹페이지의 Document 객체 제어 (DOM 이용) 웹페이지의 Window 객체 제어 및 브라우저 제어(Navigator,Location…","fields":{"slug":"/JavaScriptAtoZ/웹브라우저원리/"},"frontmatter":{"date":"March 17, 2020","title":"JS - 웹 브라우저 실행시 일어나는 일","description":"웹브라우저의 객체, 웹브라우저의 구동과정"}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","916993862"]}