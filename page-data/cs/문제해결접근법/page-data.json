{"componentChunkName":"component---src-templates-blog-post-js","path":"/cs/문제해결접근법/","result":{"data":{"site":{"siteMetadata":{"title":"Blog-Around"}},"markdownRemark":{"id":"0fb1d3e2-2224-59b0-b35c-88cde46ff21d","excerpt":"문제 해결법 소개 알고리즘이란? 특정 업무를 달성 하기 위한 일의 단계들.\n이번 강의에서는 interview…","html":"<h2>문제 해결법 소개</h2>\n<p>알고리즘이란? 특정 업무를 달성 하기 위한 일의 단계들.\n이번 강의에서는 interview에 나올 만한 내용을 다룰 것이다.</p>\n<p>어떻게 잘 할 수 있을까? 선천적으로 잘하던가. 아니면 발전 시키면 된다.\n일반적으로 아래 방법을 이용해서 처음 보는 문제를 풀 수 있다.</p>\n<ol>\n<li>문제를 어떻게 해결할지 계획을 세운다.</li>\n<li>일반적인 문제 해결법 (DP,그리디, dfs,bfs 등등)들을 마스터한다.</li>\n</ol>\n<p>문제 해결 궁리 단계\n면접시에 새로운 문제를 받았을 때?</p>\n<h2>1. 문제 이해</h2>\n<p>시간 제한이 있는 경우 바로 문제를 해결 하고 싶을 수 있지만. 문제를 정확히 이해하고 문제를 해결하는 것이 중요하다. 아래의 질문들을 던짐으로써 문제를 파악할 수 있다.</p>\n<ul>\n<li>나의만의 언어로 문제를 설명할 수 있는가?.</li>\n<li>입력이 무엇인지</li>\n<li>출력이 어떻게 되어야 하는지(타입, 형태, 제한사항 등등).</li>\n<li>입력에 의해 출력이 결정되는지</li>\n<li>내가 문제를 풀기 위한 데이터를 충분히 입력받을 수 있는지</li>\n<li>문제 해결에 있어서 중요한 데이터를 어떻게 이름 붙여야 하는가?</li>\n</ul>\n<p>아래문제에 적용해보자.</p>\n<p>“두개의 숫자를 받아 두 숫자를 더한 값을 반환하는 함수를 작성하시오”</p>\n<h2>2. 구체적인 입력의 예시들을 확인한다.</h2>\n<p>구체적인 예시들을 생각해보는 것은 문제를 더 잘 이해하게 해준다.\n또한 예시들이 내가 작성한 문제를 검증하는데에도 사용된다.</p>\n<ul>\n<li>유저 스토리 (언제 input이 어떻게 들어올지 생각)</li>\n<li>유닛 테스트</li>\n<li>가장 간단한 예시로 문제를 설명해본다.</li>\n<li>어려운 예시로 문제를 설명해본다.</li>\n<li>또한 그 후에는 빈 값등 엣지 케이스 들을 확인한다.</li>\n<li>유효하지 않은 입력이 왔을 때도 생각해야한다.</li>\n</ul>\n<p>아래 문제에 적용해보자.</p>\n<p>string값을 받아 각 문자의 개수를 세서 출력하는 함수를 작성하라.</p>\n<h2>3. 각각 세부적인 단계들로 분리한다</h2>\n<p>단계 별로 수행할 일들을 적어둔다. 이렇게 함으로써 바로 더오르는 데로 코드를 작성하는 것을 막고 계속해서 확인하며 문제를 해결할 수 있다. 또한 문제를 해결하기 위해 구체적이지 않은 부분들도 드러나게 된다.</p>\n<ol>\n<li>이전 단계들을 다 하고</li>\n<li>함수의 이름과 출력을 정한 뒤</li>\n<li>함수의 내용물을 코드가 아닌 언어로 상세하게 단계별로 정리한다.</li>\n<li>가장 간단한 언어로 큰 단계를 정리하고</li>\n<li>그 뒤에 상세한 단계를 정리한다.</li>\n</ol>\n<h2>4. 단순화 하고 해결한다.</h2>\n<p>문제를 풀고, 문제를 풀 수 없다면 간단한 문제를 먼저 풀고 이후에 어려운 부분들을 해결한다.</p>\n<ul>\n<li>어려운 부분의 핵심을 찾는다.</li>\n<li>어려운 부분을 무시한다.</li>\n<li>쉬운 답을 먼저 적는다</li>\n<li>어려운 부분을 쉬운 부분과 통합해서 해결한다.</li>\n</ul>\n<h2>5. 재검토 후 리펙터링을 진행한다.</h2>\n<p>각각의 코드를 보며 읽기 어려운 부분이나 마음에 들지 않는 부분을 찾아낸다.\n그리고 아래의 질문들을 던져본다.</p>\n<ul>\n<li>결과를 확인 할 수 있는가?</li>\n<li>다른 방법으로 결과를 만들어낼 수 있는가?</li>\n<li>한눈에 코드를 이해할 수 있는가?</li>\n<li>다른 문제 해결에 동일하게 사용할 수 있는가?</li>\n<li>성능을 더 개선 할 수 있는가?</li>\n<li>다른 구현 방법이 있을까?</li>\n<li>다른 사람들은 이 문제를 어떻게 해결했을까?</li>\n</ul>","frontmatter":{"title":"문제 해결 접근법 필기","date":"February 06, 2022","description":"모르는 문제에 어떻게 접근할것인지에 대한 강의 정리"}}},"pageContext":{"slug":"/cs/문제해결접근법/","previous":{"fields":{"slug":"/books/lean_part3/"},"frontmatter":{"title":"린분석 Part.3 목표 기준."}},"next":null}},"staticQueryHashes":["2841359383","916993862"]}