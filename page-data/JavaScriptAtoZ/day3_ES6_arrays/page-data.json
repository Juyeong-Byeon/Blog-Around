{"componentChunkName":"component---src-templates-blog-post-js","path":"/JavaScriptAtoZ/day3_ES6_arrays/","result":{"data":{"site":{"siteMetadata":{"title":"Blog-Around"}},"markdownRemark":{"id":"fa9c00ec-f9e7-569b-8812-81c0ae183e28","excerpt":"ES6의 배열 비구조화 할당 만약 함수가 array를 return 할 때 비구조화 할당을 이용하면 깔끔한 처리가 가능하다.  객체 비구조화 할당 obj Destructuring…","html":"<h1>ES6의 배열</h1>\n<h2>비구조화 할당</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token comment\">//a=1,b=1</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//c=2,d=4</span>\n<span class=\"token comment\">//우변보다 좌변이 많거나 그 반대일 경우 많은쪽이 무시된다. </span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>f<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//f 에 앞의 1 2 3 이 제외된 배열이 할당된다.</span></code></pre></div>\n<p>만약 함수가 array를 return 할 때 비구조화 할당을 이용하면 깔끔한 처리가 가능하다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">foo</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">[</span>x<span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>객체 비구조화 할당 obj Destructuring</h2>\n<p>객체 또한 비구조화 할당을 사용할 수 있다. 프로퍼티를 쉼표로 구분하고, 중괄호로 묶어준다. 이 프로퍼티 이름은 우변의 프로퍼티 이름이며 값으로는 임의의 변수를 사용할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>a<span class=\"token operator\">:</span>x<span class=\"token punctuation\">,</span>b<span class=\"token operator\">:</span>y<span class=\"token punctuation\">}</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>a<span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>b<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token comment\">//x=10 b=20</span>\n<span class=\"token comment\">//앞은 원래 변수명 뒤는 새 변수명이라고 생각하면 된다.</span></code></pre></div>\n<h2>spread 연산</h2>\n<h2>ArrayBuffer 와 형식화 배열</h2>\n<h2>Set</h2>","frontmatter":{"title":"JS - 비구조화 할당","date":"April 08, 2020","description":"ES6 배열, 객체 문법"}}},"pageContext":{"slug":"/JavaScriptAtoZ/day3_ES6_arrays/","previous":{"fields":{"slug":"/JavaScriptAtoZ/day2_arrays/"},"frontmatter":{"title":"JS - 자바스크립트 배열 메서드"}},"next":{"fields":{"slug":"/JavaScriptAtoZ/Java_reboot/1_Java의 특징 및 특성/"},"frontmatter":{"title":"Java - 자바의 특징 및 특성"}}}},"staticQueryHashes":["2841359383","916993862"]}