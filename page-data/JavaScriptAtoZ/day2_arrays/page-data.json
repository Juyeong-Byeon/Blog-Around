{"componentChunkName":"component---src-templates-blog-post-js","path":"/JavaScriptAtoZ/day2_arrays/","result":{"data":{"site":{"siteMetadata":{"title":"Blog-Around"}},"markdownRemark":{"id":"b16c8255-b30c-5d49-b339-55d7c04ceb6d","excerpt":"배열 메서드와 유사배열 객체 1. 배열의 메서드 배열은 Array 타입의 객체이다. Array.prototype의 객체를 상속받는 다는 것이다. 이 내부에는 많은 메서드가 있는데, 배열의 처리에 유용한 메서드가 많아 몇가지를 정리해보려고 한다.…","html":"<h1>배열 메서드와 유사배열 객체</h1>\n<h2>1. 배열의 메서드</h2>\n<p>배열은 Array 타입의 객체이다. Array.prototype의 객체를 상속받는 다는 것이다. 이 내부에는 많은 메서드가 있는데, 배열의 처리에 유용한 메서드가 많아 몇가지를 정리해보려고 한다. </p>\n<h3>1. 수정메서드: 원본 배열을 수정하는 메서드</h3>\n<h4>push</h4>\n<p>push 메서드는 배열의 마지막 하에 하나 이상의 요소를 추가한다. 반환으로는 그 배열의 길이를 반환한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return 5;  배열[1,2,3,4,5]</span></code></pre></div>\n<h4>pop</h4>\n<p>pop 메서드는 배열의 마지막 요소를 잘라내어 반환한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return 5;  배열[1,2,3,4]</span></code></pre></div>\n<h4>shift</h4>\n<p>맨 앞에 값을 제거하고 모든 배열요소를 왼쪽으로 이동시킨다. 반환값은 삭제된 요소의 값이다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return 4;  배열[1,2,3]</span></code></pre></div>\n<h4>unshift</h4>\n<p>배열을 모두 오른쪽으로 한칸씩 밀고 값을 추가한다. 반환값은 배열의 길이이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return 5;  배열[0,1,2,3,4]</span></code></pre></div>\n<h4>splice</h4>\n<p>특정인덱스의 배열요소를 갈아끼울때 사용하는 범용메서드이다. 요소를 끼워 넣기만 할 수도 있고, 삭제만 할 수 도 있다. 삭제된 요소는 배열로 만들어서 반환한다. splice-이어붙이기 </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>howMany<span class=\"token punctuation\">,</span>배열에 들어갈 요소 쉼표구분<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return [4];  배열[1,2,3]</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//4를 다시 추가 </span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//index 1 이후의 값을 모두 삭제</span></code></pre></div>\n<h4>sort</h4>\n<p>배열 안의 요소를 정렬한다. 인수로는 실제로 비교를 담당하는 함수를 넘겨주며 반환값은 정렬된 배열이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return [1,2,3,4];</span></code></pre></div>\n<p>비교를 담당하는 함수의 인수는 2개이며, 첫 번째 인수는 인접한 요소의 왼쪽 요소고 두 번째 인수는 오른쪽 요소이다.\n비교함수를 f(a,b)라고 했을때 다음과 같이 정렬된다.</p>\n<ol>\n<li>f(a,b)&#x3C;0 일 경우 a를 b보다 작은 인덱스에 정렬한다. </li>\n<li>f(a,b)==0일경우 a와 b의 순서를 바꾸지 않는다.</li>\n<li>f(a,b)>0 b를 a보다 작은 인덱스에 정렬한다. </li>\n</ol>\n<p>만약 비교함수를 지정하지 않으면 배열의 요소를 문자열로 변환한 다음 사전순으로 지정하고 undefined가 있으면 마지막에 위치시킨다. </p>\n<h3>2. 접근자 메서드 : 새로 가공한 배열을 반환하는 메서드 원본은 바뀌지 않는다.</h3>\n<h4>join</h4>\n<p>모든 요소값을 문자열로 바꾼 후 인수로 받은 문자로 연결해서 반환한다. 요소값이 undefined 나 null 일때는 그 요소 값을 빈 문자로 간주한다. 인수를 지정하지 않으면 쉼표로 배열의 요소값을 연결해서 반환한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"1,2,3,4\"</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//1-2-3-4</span></code></pre></div>\n<h4>concat</h4>\n<p>인수로 받은 값을 그 배열의 요소로 추가해 새로운 배열을 생성, 받은 인수가 배열이면 spread 한 후에 배열에 추가한다. concat은 연결한다는 뜻이다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return [1,2,3,4,5,6,7];</span></code></pre></div>\n<h4>slice</h4>\n<p>slice 메서드는 배열의 일부를 제거한 새로운 배열을 반환한다.\narr.slice(a,b)라고 할때 a는 요소를 자를 시작 인덱스이다. b는 요소를 자를 마지막 인덱스 앞의 요소이다. 즉 인덱스는 a&#x3C;=target&#x3C;b 이다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return [1,2];</span></code></pre></div>\n<p>만약 -1을 인수로 넣을경우 마지막 -1 인덱스까지 slice 를 진행한다. </p>\n<h4>indexOf lastIndexOf</h4>\n<p>indexOf 는 배열 내에서 어떠한 값을 가지는 요소의 index를 찾을 때 사용 된다. indexOf는 가장 먼저 찾아진 index를 반환하고, lastIndexOf는 찾아진 요소의 마지막 index를 반환한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ㄱ'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ㄴ'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ㄷ'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ㄹ'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ㄱ'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//return 0 </span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ㄷ'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//2번 index부터 검색 시작 </span></code></pre></div>\n<h4>toString toLocaleString</h4>\n<p>배열내용을을 쉼표로 구분해 반환한다.\ntoLocaleString은 해당 지역에 맞는 언어로 지역화한 문자열로 나타낸다. </p>\n<h3>반복메서드 : 배열의 모든 요소를 순회해 작업을 수행하거나 필터링을 해 리턴해주는 함수, 대부분 첫번 째 인수로 함수의 참조를 받아오는 고차 함수이다.</h3>\n<h4>forEach</h4>\n<p>인수로 받은 함수를 배열의 요소별로 한번씩 실행한다. 그 함수에는 인수 3개가 전달된다.(value,index,array);</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//1 2 3 4 </span></code></pre></div>\n<p>for문 대신 사용하기 유용하다.</p>\n<h4>map</h4>\n<p>map 메서드는 인수로 받은 함수를 배열의 요소별로 한번씩 실행하며 마지막에는 그 함수가 반환한 값으로 배열을 만들어 반환한다. 인수는 마찬가지로(val,index,arr)이 넘어온다.\nmap의 파라메터 메서드는 반드시 값을 반환해야 한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>val<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return [2,4,6,8]</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>val<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>val<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//반환되는 함수에 연달아 사용할 수도 있다.</span></code></pre></div>\n<h4>reduce</h4>\n<p>배열의 첫번째 요소부터 마지막 요소까지 합성곱 처리를 한다. 합성곱 처리는 배열 요소 하나를 함수로 처리한 후에 그 반환 값을 다음번 요소를 처리 할 때, 함수의 입력 값으로 사용하는 처리 방법을 말한다. 인수는 다음과 같다.reduce((prev,value,index,array)=>{},initialValue)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span>arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>acc<span class=\"token operator\">+</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//return 10;</span></code></pre></div>\n<h2>2. 다차원 배열</h2>\n<p>자바스크립트에서는 다차원 배열을 정의하기 위한 문법을 제공하지 않는다. 하지만 배열에 배열을 중첩하면 다차원 배열과 유사한 기능을 사용할 수 있다. </p>\n<p>다음과 같은 방법들로 다차원 배열을 정의 할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token comment\">//5*5 다차원 배열 정의</span>\n\n<span class=\"token keyword\">let</span> b<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">//리터럴을 이용해서 생성, 초기화 가능</span></code></pre></div>\n<p>각 열에 생성된 배열은 배열 객체를 포함하는 것이다.\n따라서 각각이 다른 객체이기 때문에 다른 길이, 다른 type의 값을 포함할 수 있다.</p>\n<h2>3. 유사배열객체</h2>\n<p>자바스크립트에서 배열은 Array 타입의 객체이다. Array 타입의 객체는 다음과 같은 성질이 있다. </p>\n<ol>\n<li>0 이상의 정수값을 프로퍼티 이름으로 가진다. </li>\n<li>length 프로퍼티가 있으며, 요소를 추가하거나 삭제하면 length 프로퍼티 값이 바뀐다. 또한 length 프로퍼티 값을 줄이면 그에 따라 배열의 크기가 줄어든다. </li>\n<li>프로토타입이 Array.prototype이므로 상속받아 사용할 수 있다. 또한 instanceof 연산자로 실행하면 Array 생성자 함수로 생성된 객체로 표시된다. </li>\n</ol>\n<p>하지만 array-like object는 length 프로퍼티가 존제하고 프로퍼티 이름이 0이상의 정수인 것만 만족하면 그 객체를 유사배열 객체라고 한다. </p>\n<p>다음과 같은 객체가 유사배열 객체이다.\n함수의 인수를 저장한 </p>\n<ol>\n<li>Argument 객체</li>\n<li>DOM의 document.getElementsByTagName 메서드 document.getElementsByName 메서드등이 반환하는 NodeList 객체 </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\na<span class=\"token punctuation\">.</span>length<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"JS - 자바스크립트 배열 메서드","date":"March 27, 2020","description":"각종배열 베서드와 유사배열 객체"}}},"pageContext":{"slug":"/JavaScriptAtoZ/day2_arrays/","previous":{"fields":{"slug":"/JavaScriptAtoZ/웹브라우저원리/"},"frontmatter":{"title":"JS - 웹 브라우저 실행시 일어나는 일"}},"next":{"fields":{"slug":"/JavaScriptAtoZ/day3_ES6_arrays/"},"frontmatter":{"title":"JS - 비구조화 할당"}}}},"staticQueryHashes":["2841359383","916993862"]}